{"ast":null,"code":"var _jsxFileName = \"G:\\\\node\\\\shop\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport userReducer from \"./store/reducers/userReducer\";\nimport adminReducer from \"./store/reducers/adminReducer\";\nimport Reducers from \"./store/reducers\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from \"./store/store\";\naxios.defaults.withCredentials = true;\nconst jwtToken = localStorage.getItem('JWT_TOKEN');\naxios.defaults.headers.common['Authorization'] = jwtToken; //const store = createStore(Reducers , {}, applyMiddleware(reduxThunk));\n\nReactDOM.render( /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(PersistGate, {\n  persistor: persistor,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 1\n  }\n})))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["G:/node/shop/client/src/index.js"],"names":["React","ReactDOM","Provider","createStore","combineReducers","applyMiddleware","reduxThunk","App","axios","serviceWorker","BrowserRouter","userReducer","adminReducer","Reducers","PersistGate","store","persistor","defaults","withCredentials","jwtToken","localStorage","getItem","headers","common","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAwCC,eAAxC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,SAASC,KAAT,EAAgBC,SAAhB,QAAgC,eAAhC;AAEAR,KAAK,CAACS,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAjB;AACAb,KAAK,CAACS,QAAN,CAAeK,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDJ,QAAjD,C,CAGA;;AACAlB,QAAQ,CAACuB,MAAT,eACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACF,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAEC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADA,CADE,CADF,EAQES,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACAjB,aAAa,CAACkB,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, combineReducers,  applyMiddleware} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './App';\r\nimport axios from 'axios';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport userReducer from \"./store/reducers/userReducer\" ;\r\nimport adminReducer from \"./store/reducers/adminReducer\" ;\r\n\r\nimport Reducers from \"./store/reducers\" ;\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport { store, persistor }from \"./store/store\" ;\r\n\r\naxios.defaults.withCredentials = true;\r\nconst jwtToken = localStorage.getItem('JWT_TOKEN');\r\naxios.defaults.headers.common['Authorization'] = jwtToken;\r\n \r\n\r\n//const store = createStore(Reducers , {}, applyMiddleware(reduxThunk));\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n<Provider store={store}>\r\n<PersistGate persistor={persistor}>\r\n<App />\r\n</PersistGate>\r\n</Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}