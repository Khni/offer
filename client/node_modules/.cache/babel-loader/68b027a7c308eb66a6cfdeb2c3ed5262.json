{"ast":null,"code":"import axios from 'axios';\nimport { AUTH_SIGN_UP, AUTH_SIGN_OUT, AUTH_SIGN_IN, AUTH_LINK_GOOGLE, AUTH_LINK_FACEBOOK, AUTH_UNLINK_GOOGLE, AUTH_UNLINK_FACEBOOK, AUTH_ERROR, DASHBOARD_GET_DATA } from '../types/authUserTypes';\nexport const signUp = data => {\n  return async dispatch => {\n    try {\n      const response = await axios.post('http://localhost:8080/signup', data);\n      console.log(\"signUp axios\");\n      dispatch({\n        type: AUTH_SIGN_UP,\n        token: response.token\n      });\n      localStorage.setItem('JWT_TOKEN', response.token);\n      axios.defaults.headers.common['Authorization'] = response.token;\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: response.error\n      });\n    }\n  };\n};\nexport const signIn = data => {\n  return async dispatch => {\n    try {\n      const response = await axios.post('http://localhost:3000/8080/signin', data);\n      dispatch({\n        type: AUTH_SIGN_IN,\n        token: response.token\n      });\n      localStorage.setItem('JWT_TOKEN', response.token);\n      axios.defaults.headers.common['Authorization'] = response.token;\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: response.error\n      });\n    }\n  };\n};\nexport const oauthGoogle = data => {\n  return async dispatch => {\n    const response = await axios.post('http://localhost:5000/users/oauth/google', {\n      access_token: data\n    });\n    dispatch({\n      type: AUTH_SIGN_UP,\n      token: response.token\n    });\n    localStorage.setItem('JWT_TOKEN', response.token);\n    axios.defaults.headers.common['Authorization'] = response.token;\n  };\n};\nexport const oauthFacebook = data => {\n  return async dispatch => {\n    const response = await axios.post('http://localhost:5000/users/oauth/facebook', {\n      access_token: data\n    });\n    dispatch({\n      type: AUTH_SIGN_UP,\n      token: response.token\n    });\n    localStorage.setItem('JWT_TOKEN', response.token);\n    axios.defaults.headers.common['Authorization'] = response.token;\n  };\n};","map":{"version":3,"sources":["/storage/emulated/0/projects/offer/offer/client/src/store/actions/users.js"],"names":["axios","AUTH_SIGN_UP","AUTH_SIGN_OUT","AUTH_SIGN_IN","AUTH_LINK_GOOGLE","AUTH_LINK_FACEBOOK","AUTH_UNLINK_GOOGLE","AUTH_UNLINK_FACEBOOK","AUTH_ERROR","DASHBOARD_GET_DATA","signUp","data","dispatch","response","post","console","log","type","token","localStorage","setItem","defaults","headers","common","err","payload","error","signIn","oauthGoogle","access_token","oauthFacebook"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { \r\n  AUTH_SIGN_UP, \r\n  AUTH_SIGN_OUT, \r\n  AUTH_SIGN_IN,\r\n  AUTH_LINK_GOOGLE, \r\n  AUTH_LINK_FACEBOOK,\r\n  AUTH_UNLINK_GOOGLE,\r\n  AUTH_UNLINK_FACEBOOK, \r\n  AUTH_ERROR,\r\n  DASHBOARD_GET_DATA } from '../types/authUserTypes'\r\n \r\n export const signUp = data => {\r\n  return async dispatch => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/signup', data);\r\n     console.log(\"signUp axios\") \r\n      dispatch({\r\n        type: AUTH_SIGN_UP, \r\n        token: response.token\r\n      });\r\n      localStorage.setItem('JWT_TOKEN', response.token);\r\n    axios.defaults.headers.common['Authorization'] = response.token;\r\n    } catch(err) {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: response.error\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\nexport const signIn = data => {\r\n  return async dispatch => {\r\n    try {\r\n   const response =   await axios.post('http://localhost:3000/8080/signin', data);\r\n\r\n      dispatch({\r\n        type: AUTH_SIGN_IN, \r\n        token: response.token\r\n      });\r\n      localStorage.setItem('JWT_TOKEN', response.token);\r\n    axios.defaults.headers.common['Authorization'] = response.token;\r\n    } catch(err) {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: response.error\r\n      })\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport const oauthGoogle = data => {\r\n  return async dispatch => {\r\n    const response = await axios.post('http://localhost:5000/users/oauth/google', {\r\n      access_token: data\r\n    });\r\n \r\n    dispatch({\r\n      type: AUTH_SIGN_UP,\r\n      token: response.token\r\n    });\r\n \r\n    localStorage.setItem('JWT_TOKEN', response.token);\r\n    axios.defaults.headers.common['Authorization'] = response.token;\r\n  };\r\n}\r\n \r\nexport const oauthFacebook = data => {\r\n  return async dispatch => {\r\n    const response = await axios.post('http://localhost:5000/users/oauth/facebook', {\r\n      access_token: data\r\n    });\r\n \r\n    dispatch({\r\n      type: AUTH_SIGN_UP,\r\n      token: response.token\r\n    });\r\n \r\n    localStorage.setItem('JWT_TOKEN', response.token);\r\n    axios.defaults.headers.common['Authorization'] = response.token;\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}